---
# role/install_k8s/tasks/main.yml
- name: Install systemd-timesyncd
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Ensure systemd-timesyncd is installed
  ansible.builtin.apt:
    name: systemd-timesyncd
    state: present

- name: Ensure systemd-timesyncd is enabled and started
  ansible.builtin.systemd:
    name: systemd-timesyncd
    enabled: true
    state: started

- name: set ntp sync to true
  ansible.builtin.command:
    cmd: timedatectl set-ntp true

- name: set timezone to Asia/Seoul
  ansible.builtin.timezone:
    name: Asia/Seoul

- name: Verify time sync status
  ansible.builtin.command:
    cmd: timedatectl
  register: timedatectl_output

- name: Print timedatectl
  ansible.builtin.debug:
    msg: "{{ timedatectl_output.stdout }}"

# swapoff -a swap 메모리 모드 비활성화
- name: disable swap
  ansible.builtin.shell: "swapoff -a"

# sed to comment the swap partition in /etc/fstab
- name: Sed to comment the swap partition in /etc/fstab
  ansible.builtin.shell: "sed -i.bak -r 's/(.+ swap .+)/#\\1/' /etc/fstab"

- name: Create containerd.conf for kernel modules
  copy:
    dest: /etc/modules-load.d/containerd.conf
    content: |
      overlay
      br_netfilter

- name: Load overlay module
  ansible.builtin.shell: "modprobe overlay"

- name: Load br_netfilter module
  ansible.builtin.shell: "modprobe br_netfilter"

# 네트워크 설정
- name: Configure iptables settings for Kubernetes
  ansible.builtin.copy:
    dest: /etc/sysctl.d/kubernetes.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1

- name: Apply sysctl settings
  ansible.builtin.shell: "sysctl --system"

- name: Update apt cache
  ansible.builtin.package:
    update_cache: yes

- name: Upgrade all packages
  ansible.builtin.package:
    upgrade: yes
    update_cache: yes

# Docker 저장소에 있는 containerd 설치
- name: Install required packages for container runtime
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop: "{{ packages }}"

- name: Ensure /etc/apt/keyrings directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Add Docker GPG key
  ansible.builtin.shell: |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Add Docker repository
  ansible.builtin.shell: |
    echo "deb [arch={{ arch_mapping_var[ansible_facts['architecture']] }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  args:
    creates: /etc/apt/sources.list.d/docker.list

- name: Update apt cache
  ansible.builtin.package:
    update_cache: yes

- name: Install containerd.io package
  ansible.builtin.package:
    name: containerd.io
    state: present
    update_cache: yes

- name: Generate default containerd config
  ansible.builtin.shell: |
    containerd config default | tee /etc/containerd/config.toml >/dev/null 2>&1

- name: Modify containerd config for SystemdCgroup
  ansible.builtin.replace:
    path: /etc/containerd/config.toml
    regexp: "SystemdCgroup = false"
    replace: "SystemdCgroup = true"

- name: Restart containerd service
  ansible.builtin.systemd:
    name: containerd
    state: restarted

- name: Enable containerd service on boot
  ansible.builtin.systemd:
    name: containerd
    enabled: yes

- name: gen the directory & add Kubernetes apt-key
  ansible.builtin.shell: >
    curl -fsSL https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/Release.key |
    gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: add Kubernetes APT repository
  ansible.builtin.shell: >
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/ /' |
    tee /etc/apt/sources.list.d/kubernetes.list

- name: Update apt cache
  apt:
    update_cache: yes

- name: install kubeadm, kubelet, kubectl
  apt:
    name:
      - kubeadm
      - kubelet
      - kubectl
    state: present

- name: Mark Kubernetes pkg to hold version
  ansible.builtin.command: apt-mark hold kubelet kubeadm kubectl

- name: Enable and start kubelet service
  ansible.builtin.systemd:
    name: kubelet
    enabled: yes
    state: started
