# prometheus-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: prometheus-server
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    alerting:
      alertmanagers:
        - static_configs:
          - targets: ['alertmanager.prometheus-server.svc.cluster.local:9093']
    rule_files:
      - /etc/prometheus/alerting_rules.yml

    scrape_configs:
      # Prometheus 자체 메트릭 수집
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      # 쿠버네티스 노드 메트릭 수집
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          insecure_skip_verify: true  # 보안상 권장되지 않으므로 실제 인증서를 사용하는 것이 좋습니다.
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token  # 추가: 인증을 위한 서비스 어카운트 토큰
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          # __address__ 설정 수정 필요
          - source_labels: [__meta_kubernetes_node_address_InternalIP]  # 수정: 노드의 내부 IP 사용
            target_label: __address__
            replacement: $1:10250  # kubelet 포트로 변경
          - source_labels: [__meta_kubernetes_node_name]
            target_label: instance
            replacement: $1
          # __metrics_path__ 설정 제거 또는 수정
          # kubelet 메트릭 수집 경로로 변경
          - target_label: __metrics_path__
            replacement: /metrics

      # 쿠버네티스 API 서버 메트릭 수집
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt  # 추가: CA 인증서 파일 경로
          insecure_skip_verify: true  # 가능하면 false로 설정하고 실제 인증서를 검증하세요.
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token  # 추가: 인증을 위한 서비스 어카운트 토큰
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: kubernetes;https

      # 쿠버네티스 DNS 메트릭 수집
      - job_name: 'kubernetes-coredns'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: kube-dns;metrics

      # 쿠버네티스 kubelet 메트릭 수집
      - job_name: 'kubernetes-kubelet'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          insecure_skip_verify: true  # 보안상 권장되지 않음
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token  # 추가: 인증을 위한 서비스 어카운트 토큰
        relabel_configs:
          # __address__ 설정 수정 필요
          - source_labels: [__meta_kubernetes_node_address_InternalIP]  # 수정: 노드의 내부 IP 사용
            regex: (.+)
            target_label: __address__
            replacement: $1:10250  # kubelet 포트로 변경
          - source_labels: [__meta_kubernetes_node_name]
            target_label: instance
            replacement: $1

      # Node Exporter 메트릭 수집 (쿠버네티스 서비스 디스커버리 사용)
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app]
            action: keep
            regex: node-exporter
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          # __address__ 설정 확인 필요
          - source_labels: [__meta_kubernetes_pod_ip]
            regex: (.+)
            target_label: __address__
            replacement: $1:9100  # 서비스 디스커버리로 발견된 주소 그대로 사용

      # 쿠버네티스 pod 메트릭 수집
      - job_name: "kubernetes_pods"
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
            replacement: $1
          - source_labels: [__meta_kubernetes_pod_ip, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+);(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
      - job_name: 'kube-state-metrics'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_namespace]
            action: keep
            regex: kube-state-metrics;kube-system
      - job_name: 'kubernetes-cadvisor'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        metrics_path: /metrics/cadvisor
        relabel_configs:
          - source_labels: [__meta_kubernetes_node_address_InternalIP]
            target_label: __address__
            replacement: $1:10250

  alerting_rules.yml: |
    groups:
      - name: Instance_alerts
        rules:
          - alert: InstanceDown
            expr: up == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Instance {{ $labels.instance }} down"
              description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 1 minute."
      - name: pod-alerts
        rules:
          - alert: PodCrashLoopBackOff
            expr: kube_pod_container_status_waiting_reason{reason="CrashLoopBackOff"} > 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is in CrashLoopBackOff"
              description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is restarting repeatedly (CrashLoopBackOff)."

          - alert: PodImagePullBackOff
            expr: kube_pod_container_status_waiting_reason{reason="ImagePullBackOff"} > 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is in ImagePullBackOff"
              description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is unable to pull image (ImagePullBackOff)."

          - alert: PodEvicted
            expr: kube_pod_status_phase{phase="Failed"} and on(pod, namespace) kube_pod_status_reason{reason="Evicted"} == 1
            for: 30s
            labels:
              severity: warning
            annotations:
              summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been evicted"
              description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been evicted from node."

          - alert: PodFailed
            expr: kube_pod_status_phase{phase="Failed"} > 0
            for: 30s
            labels:
              severity: critical
            annotations:
              summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has failed"
              description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has terminated abnormally with status Failed."

          - alert: PodRestarts
            expr: rate(kube_pod_container_status_restarts_total[5m]) > 0
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is restarting"
              description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has restarted {{ $value | humanize }} times in the last 5 minutes."

          - alert: PodUnknown
            expr: kube_pod_status_phase{phase="Unknown"} > 0
            for: 30s
            labels:
              severity: critical
            annotations:
              summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is in Unknown state"
              description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is in an Unknown state."
      - name: node-alerts
        rules:
          - alert: NodeDiskPressure
            expr: kube_node_status_condition{condition="DiskPressure", status="true"} == 1
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: "Node {{ $labels.node }} has disk pressure"
              description: "Node {{ $labels.node }} is reporting disk pressure."

          - alert: NodeMemoryPressure
            expr: kube_node_status_condition{condition="MemoryPressure", status="true"} == 1
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: "Node {{ $labels.node }} has memory pressure"
              description: "Node {{ $labels.node }} is reporting memory pressure."

          - alert: NodePIDPressure
            expr: kube_node_status_condition{condition="PIDPressure", status="true"} == 1
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: "Node {{ $labels.node }} has PID pressure"
              description: "Node {{ $labels.node }} is reporting PID pressure."

          - alert: NodeNotReady
            expr: kube_node_status_condition{condition="Ready", status="false"} == 1
            for: 30s
            labels:
              severity: critical
            annotations:
              summary: "Node {{ $labels.node }} is not ready"
              description: "Node {{ $labels.node }} is not ready."

          - alert: NodeOutOfDisk
            expr: kube_node_status_condition{condition="OutOfDisk", status="true"} == 1
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Node {{ $labels.node }} is out of disk space"
              description: "Node {{ $labels.node }} is out of disk space."

          - alert: NodeInsufficientCPU
            expr: (kube_node_status_allocatable_cpu_cores - sum(kube_pod_container_resource_requests_cpu_cores{node=~".+"}) by (node)) / kube_node_status_allocatable_cpu_cores < 0.1
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Node {{ $labels.node }} has insufficient CPU resources"
              description: "Node {{ $labels.node }} has less than 10% CPU resources available."

          - alert: NodeInsufficientMemory
            expr: (kube_node_status_allocatable_memory_bytes - sum(kube_pod_container_resource_requests_memory_bytes{node=~".+"}) by (node)) / kube_node_status_allocatable_memory_bytes < 0.1
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Node {{ $labels.node }} has insufficient memory resources"
              description: "Node {{ $labels.node }} has less than 10% memory resources available."
